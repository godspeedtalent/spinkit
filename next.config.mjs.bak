/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
  webpack: (config, { isServer, webpack }) => {
    if (isServer) {
      // Target only the specific instrumentation loading path that caused the warning
      config.plugins.push(
        new webpack.IgnorePlugin({
          resourceRegExp: /@opentelemetry\/instrumentation\/build\/esm\/platform\/node\/instrumentation\.js$/,
        })
      );
      // Add other specific ignores if needed, but start minimal
      // For example, to ignore jaeger exporter if it causes issues and is only server-side
      config.plugins.push(
        new webpack.IgnorePlugin({
          resourceRegExp: /@opentelemetry\/exporter-jaeger/,
        })
      );
    }
    return config;
  },
};

export default nextConfig;
