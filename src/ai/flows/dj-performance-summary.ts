// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview Summarizes a DJ's performance based on sales data and external factors like weather.
 *
 * - djPerformanceSummary - A function that generates a summary of a DJ's performance.
 * - DjPerformanceSummaryInput - The input type for the djPerformanceSummary function.
 * - DjPerformanceSummaryOutput - The return type for the djPerformanceSummary function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const DjPerformanceSummaryInputSchema = z.object({
  djName: z.string().describe('The name of the DJ.'),
  venueName: z.string().describe('The name of the venue.'),
  date: z.string().describe('The date of the performance (YYYY-MM-DD).'),
  salesData: z
    .string()
    .describe(
      'Sales data for the night, including hourly sales, total sales, and peak hours.'
    ),
  weatherData: z
    .string()
    .describe(
      'Weather data for the night, including temperature, precipitation, and any significant weather events.'
    ),
  otherEvents: z
    .string()
    .optional()
    .describe('Any other events occurring that night that could affect sales.'),
});

export type DjPerformanceSummaryInput = z.infer<typeof DjPerformanceSummaryInputSchema>;

const DjPerformanceSummaryOutputSchema = z.object({
  summary: z
    .string()
    .describe(
      'A detailed summary of the DJ performance, including analysis of sales data in relation to weather and other events, and an overall effectiveness rating.'
    ),
  effectivenessRating: z
    .string()
    .describe(
      'An overall rating of the DJs effectiveness (e.g., High, Medium, Low) based on the analysis.'
    ),
});

export type DjPerformanceSummaryOutput = z.infer<typeof DjPerformanceSummaryOutputSchema>;

export async function djPerformanceSummary(
  input: DjPerformanceSummaryInput
): Promise<DjPerformanceSummaryOutput> {
  return djPerformanceSummaryFlow(input);
}

const prompt = ai.definePrompt({
  name: 'djPerformanceSummaryPrompt',
  input: {schema: DjPerformanceSummaryInputSchema},
  output: {schema: DjPerformanceSummaryOutputSchema},
  prompt: `You are an expert in analyzing DJ performance at venues.

  Based on the sales data, weather data, and any other events, provide a detailed summary of the DJ's performance and an overall effectiveness rating (High, Medium, or Low).

  DJ Name: {{{djName}}}
  Venue Name: {{{venueName}}}
  Date: {{{date}}}
  Sales Data: {{{salesData}}}
  Weather Data: {{{weatherData}}}
  Other Events: {{{otherEvents}}}

  Summary:
  Effectiveness Rating:`,
});

const djPerformanceSummaryFlow = ai.defineFlow(
  {
    name: 'djPerformanceSummaryFlow',
    inputSchema: DjPerformanceSummaryInputSchema,
    outputSchema: DjPerformanceSummaryOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
